// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PostsImport } from './routes/posts'
import { Route as PostsIndexImport } from './routes/posts.index'
import { Route as LayoutTestLayoutBImport } from './routes/_layout-test/layout-b'
import { Route as LayoutTestLayoutAImport } from './routes/_layout-test/layout-a'
import { Route as PostsPostIdRouteImport } from './routes/posts.$postId/route'
import { Route as PostsPostIdDeepImport } from './routes/posts_.$postId.deep'

// Create Virtual Routes

const LayoutTestLazyImport = createFileRoute('/_layout-test')()
const IndexLazyImport = createFileRoute('/')()
const LayoutTestLayoutBTestLazyImport = createFileRoute(
  '/_layout-test/layout-b/test',
)()

// Create/Update Routes

const LayoutTestLazyRoute = LayoutTestLazyImport.update({
  id: '/_layout-test',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/_layout-test.lazy').then((d) => d.Route))

const PostsRoute = PostsImport.update({
  path: '/posts',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/posts.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const PostsIndexRoute = PostsIndexImport.update({
  path: '/',
  getParentRoute: () => PostsRoute,
} as any)

const LayoutTestLayoutBRoute = LayoutTestLayoutBImport.update({
  path: '/layout-b',
  getParentRoute: () => LayoutTestLazyRoute,
} as any)

const LayoutTestLayoutARoute = LayoutTestLayoutAImport.update({
  path: '/layout-a',
  getParentRoute: () => LayoutTestLazyRoute,
} as any)

const PostsPostIdRouteRoute = PostsPostIdRouteImport.update({
  path: '/$postId',
  getParentRoute: () => PostsRoute,
} as any).lazy(() => import('./routes/posts.$postId/lazy').then((d) => d.Route))

const LayoutTestLayoutBTestLazyRoute = LayoutTestLayoutBTestLazyImport.update({
  path: '/test',
  getParentRoute: () => LayoutTestLayoutBRoute,
} as any).lazy(() =>
  import('./routes/_layout-test/layout-b.test.lazy').then((d) => d.Route),
)

const PostsPostIdDeepRoute = PostsPostIdDeepImport.update({
  path: '/posts/$postId/deep',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/posts_.$postId.deep.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/posts': {
      preLoaderRoute: typeof PostsImport
      parentRoute: typeof rootRoute
    }
    '/_layout-test': {
      preLoaderRoute: typeof LayoutTestLazyImport
      parentRoute: typeof rootRoute
    }
    '/posts/$postId': {
      preLoaderRoute: typeof PostsPostIdRouteImport
      parentRoute: typeof PostsImport
    }
    '/_layout-test/layout-a': {
      preLoaderRoute: typeof LayoutTestLayoutAImport
      parentRoute: typeof LayoutTestLazyImport
    }
    '/_layout-test/layout-b': {
      preLoaderRoute: typeof LayoutTestLayoutBImport
      parentRoute: typeof LayoutTestLazyImport
    }
    '/posts/': {
      preLoaderRoute: typeof PostsIndexImport
      parentRoute: typeof PostsImport
    }
    '/posts/$postId/deep': {
      preLoaderRoute: typeof PostsPostIdDeepImport
      parentRoute: typeof rootRoute
    }
    '/_layout-test/layout-b/test': {
      preLoaderRoute: typeof LayoutTestLayoutBTestLazyImport
      parentRoute: typeof LayoutTestLayoutBImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  PostsRoute.addChildren([PostsPostIdRouteRoute, PostsIndexRoute]),
  LayoutTestLazyRoute.addChildren([
    LayoutTestLayoutARoute,
    LayoutTestLayoutBRoute.addChildren([LayoutTestLayoutBTestLazyRoute]),
  ]),
  PostsPostIdDeepRoute,
])
